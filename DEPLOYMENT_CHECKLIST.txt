╔══════════════════════════════════════════════════════════════════════════╗
║                  SECURITY FIXES DEPLOYMENT CHECKLIST                     ║
║                         TraKerja Application                             ║
║                        Date: 30 Oktober 2025                             ║
╚══════════════════════════════════════════════════════════════════════════╝

┌──────────────────────────────────────────────────────────────────────────┐
│                          PRE-DEPLOYMENT                                  │
└──────────────────────────────────────────────────────────────────────────┘

☐ 1. Code review completed
☐ 2. Dokumentasi sudah dibaca:
     ☐ SECURITY_FIXES_SUMMARY.md
     ☐ QUICK_DEPLOYMENT_GUIDE.md
☐ 3. Tim development sudah aware
☐ 4. Project manager sudah approve
☐ 5. Deployment time sudah scheduled
☐ 6. Users sudah diinformasikan (akan logout otomatis)

┌──────────────────────────────────────────────────────────────────────────┐
│                             BACKUP                                       │
└──────────────────────────────────────────────────────────────────────────┘

☐ 1. Database backup dibuat
     Command: mysqldump -u username -p db_name > backup_[DATE].sql
     File: _________________________________

☐ 2. .env file backup dibuat
     Command: cp .env .env.backup
     File: _________________________________

☐ 3. Code backup dibuat (optional)
     Command: tar -czf backup_[DATE].tar.gz /path/to/project
     File: _________________________________

☐ 4. Backup verified (file size > 0)
     ☐ Database backup OK
     ☐ .env backup OK
     ☐ Code backup OK

┌──────────────────────────────────────────────────────────────────────────┐
│                      ENVIRONMENT CONFIGURATION                           │
└──────────────────────────────────────────────────────────────────────────┘

☐ 1. SSH ke server production
     Server: _________________________________
     User: ___________________________________

☐ 2. Masuk ke directory project
     Path: ___________________________________

☐ 3. Edit .env file
     Command: nano .env

☐ 4. Tambahkan/update configuration:
     ☐ ADMIN_EMAIL=infoteknalogi@gmail.com
     ☐ SESSION_ENCRYPT=true
     ☐ SESSION_SECURE_COOKIE=true
     ☐ APP_ENV=production
     ☐ APP_DEBUG=false

☐ 5. Save .env file (Ctrl+O, Enter, Ctrl+X)

☐ 6. Verify changes:
     Command: cat .env | grep -E "ADMIN_EMAIL|SESSION"
     ☐ ADMIN_EMAIL terset dengan benar
     ☐ SESSION_ENCRYPT=true
     ☐ SESSION_SECURE_COOKIE=true

┌──────────────────────────────────────────────────────────────────────────┐
│                         CODE DEPLOYMENT                                  │
└──────────────────────────────────────────────────────────────────────────┘

Method: ☐ Git  ☐ Manual Upload

If Git:
  ☐ 1. Pull latest changes
       Command: git pull origin main
  ☐ 2. Verify files updated:
       ☐ RegisteredUserController.php
       ☐ LogoController.php
       ☐ session.php

If Manual:
  ☐ 1. Upload via FTP/SFTP:
       ☐ app/Http/Controllers/Auth/RegisteredUserController.php
       ☐ app/Http/Controllers/LogoController.php
       ☐ config/session.php
  ☐ 2. Verify upload successful

┌──────────────────────────────────────────────────────────────────────────┐
│                        CACHE & OPTIMIZATION                              │
└──────────────────────────────────────────────────────────────────────────┘

☐ 1. Clear config cache
     Command: php artisan config:clear
     Output: _________________________________

☐ 2. Clear application cache
     Command: php artisan cache:clear
     Output: _________________________________

☐ 3. Clear route cache
     Command: php artisan route:clear
     Output: _________________________________

☐ 4. Clear view cache
     Command: php artisan view:clear
     Output: _________________________________

☐ 5. Cache config for production
     Command: php artisan config:cache
     Output: _________________________________

☐ 6. Cache routes for production
     Command: php artisan route:cache
     Output: _________________________________

☐ 7. Optimize composer autoload
     Command: composer dump-autoload -o
     Output: _________________________________

┌──────────────────────────────────────────────────────────────────────────┐
│                         SESSION MANAGEMENT                               │
└──────────────────────────────────────────────────────────────────────────┘

⚠️  WARNING: Step ini akan logout SEMUA user yang aktif!

☐ 1. User notification sent (confirm)

☐ 2. Connect to MySQL:
     Command: mysql -u username -p database_name
     Database: _________________________________

☐ 3. Flush sessions:
     Command: TRUNCATE TABLE sessions;
     Result: _________________________________

☐ 4. Exit MySQL:
     Command: exit

☐ 5. Verify sessions cleared:
     Command: mysql -u user -p db -e "SELECT COUNT(*) FROM sessions;"
     Count should be: 0

┌──────────────────────────────────────────────────────────────────────────┐
│                         POST-DEPLOYMENT TESTING                          │
└──────────────────────────────────────────────────────────────────────────┘

☐ 1. Website accessible
     URL: _________________________________
     Status: ☐ OK  ☐ Error

☐ 2. Test User Registration:
     ☐ Form accessible
     ☐ Can submit registration
     ☐ Email verification sent
     ☐ Admin notification received
     Email: _________________________________

☐ 3. Test User Login:
     ☐ Can access login page
     ☐ Can login successfully
     ☐ Session persists
     ☐ Dashboard accessible

☐ 4. Test User Logout:
     ☐ Logout works
     ☐ Session cleared
     ☐ Redirected to homepage

☐ 5. Test Profile Photo Upload:
     ☐ Upload form accessible
     ☐ Can upload photo
     ☐ Photo displayed correctly
     ☐ No errors in logs

☐ 6. Test Profile Photo Delete:
     ☐ Delete button works
     ☐ Photo removed successfully
     ☐ No errors in logs
     ☐ No path traversal warnings (check logs)

☐ 7. Check Security Headers:
     Command: curl -I https://yourdomain.com
     ☐ X-Frame-Options present
     ☐ X-Content-Type-Options present
     ☐ Strict-Transport-Security present (if HTTPS)

┌──────────────────────────────────────────────────────────────────────────┐
│                         LOG MONITORING                                   │
└──────────────────────────────────────────────────────────────────────────┘

☐ 1. Check Laravel logs:
     Command: tail -f storage/logs/laravel.log
     ☐ No critical errors
     ☐ No session encryption errors
     ☐ No file operation errors

☐ 2. Check Web Server logs (Nginx):
     Command: tail -f /var/log/nginx/error.log
     ☐ No critical errors

☐ 3. Check Web Server logs (Apache):
     Command: tail -f /var/log/apache2/error.log
     ☐ No critical errors

☐ 4. Monitor for 1-2 hours:
     Start time: _________________________________
     End time: ___________________________________
     ☐ No issues detected

┌──────────────────────────────────────────────────────────────────────────┐
│                        CONFIGURATION VERIFICATION                        │
└──────────────────────────────────────────────────────────────────────────┘

☐ 1. Test configuration via tinker:
     Command: php artisan tinker

☐ 2. Test ADMIN_EMAIL:
     >>> env('ADMIN_EMAIL')
     Expected: "infoteknalogi@gmail.com"
     Actual: _________________________________

☐ 3. Test SESSION_ENCRYPT:
     >>> config('session.encrypt')
     Expected: true
     Actual: _________________________________

☐ 4. Test SESSION_SECURE:
     >>> config('session.secure')
     Expected: true (if HTTPS)
     Actual: _________________________________

☐ 5. Test APP_ENV:
     >>> env('APP_ENV')
     Expected: "production"
     Actual: _________________________________

☐ 6. Test APP_DEBUG:
     >>> env('APP_DEBUG')
     Expected: false
     Actual: _________________________________

☐ 7. Exit tinker:
     >>> exit

┌──────────────────────────────────────────────────────────────────────────┐
│                         FINAL VERIFICATION                               │
└──────────────────────────────────────────────────────────────────────────┘

☐ 1. All tests passed
☐ 2. No critical errors in logs
☐ 3. Users can login successfully
☐ 4. Email notifications working
☐ 5. File upload/delete working
☐ 6. Security headers active
☐ 7. Performance normal
☐ 8. Documentation updated

┌──────────────────────────────────────────────────────────────────────────┐
│                        POST-DEPLOYMENT ACTIONS                           │
└──────────────────────────────────────────────────────────────────────────┘

☐ 1. Inform stakeholders deployment complete
☐ 2. Inform users can login again
☐ 3. Update deployment log/documentation
☐ 4. Schedule follow-up check (24 hours)
☐ 5. Monitor logs for next 24-48 hours
☐ 6. Archive backups (keep for 30 days minimum)

┌──────────────────────────────────────────────────────────────────────────┐
│                          DEPLOYMENT SUMMARY                              │
└──────────────────────────────────────────────────────────────────────────┘

Deployment Date: _________________________________
Deployment Time: _________________________________
Deployed By: _____________________________________

Status: ☐ SUCCESS  ☐ FAILED  ☐ ROLLBACK REQUIRED

Issues Encountered (if any):
_________________________________________________________________________
_________________________________________________________________________
_________________________________________________________________________

Resolution:
_________________________________________________________________________
_________________________________________________________________________
_________________________________________________________________________

Downtime: _______ minutes

Users Affected: ☐ All (expected)  ☐ Partial  ☐ None

Notes:
_________________________________________________________________________
_________________________________________________________________________
_________________________________________________________________________
_________________________________________________________________________

Approved By: _____________________________________
Signature: _______________________________________
Date: ____________________________________________

╔══════════════════════════════════════════════════════════════════════════╗
║                         DEPLOYMENT COMPLETE                              ║
║                  Keep this checklist for audit trail                     ║
╚══════════════════════════════════════════════════════════════════════════╝

